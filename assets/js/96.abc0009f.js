(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{472:function(v,_,e){"use strict";e.r(_);var t=e(8),o=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"codility-fish-yu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#codility-fish-yu"}},[v._v("#")]),v._v(" Codility: Fish 魚")]),v._v(" "),e("p",[v._v("在一條河流中，有 "),e("code",[v._v("N")]),v._v(" 隻飢腸轆轆的魚。題目會給予兩個長度為 "),e("code",[v._v("N")]),v._v("（"),e("code",[v._v("N > 0")]),v._v("）的整數陣列 "),e("code",[v._v("A")]),v._v(" 和 "),e("code",[v._v("B")]),v._v("，代表從上游開始往下第 "),e("code",[v._v("i")]),v._v("（"),e("code",[v._v("0 <= i < N")]),v._v("）隻魚的大小 "),e("code",[v._v("A[i]")]),v._v(" 以及游泳方向 "),e("code",[v._v("B[i]")]),v._v("，每隻魚的大小及位置都不會相同。魚的游泳方向只會是 "),e("code",[v._v("0")]),v._v(" 或是 "),e("code",[v._v("1")]),v._v("，分別代表:")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("0")]),v._v(" 代表魚往上游的方向游")]),v._v(" "),e("li",[e("code",[v._v("1")]),v._v(" 代表魚往下游的方向游")])]),v._v(" "),e("p",[v._v("如果相鄰的魚（兩隻魚中間沒有活著的魚）朝對方的方向游泳的話，他們就會相遇。這時候就只剩下一隻魚會活下來，也就是體型比較大的魚會把比較小的魚吃掉。更確切的說，假設有兩隻魚 "),e("code",[v._v("P")]),v._v(" 和 "),e("code",[v._v("Q")]),v._v("，其中 "),e("code",[v._v("P < Q")]),v._v("、"),e("code",[v._v("B[P] = 1")]),v._v("、"),e("code",[v._v("B[Q] = 0")]),v._v("、"),e("code",[v._v("P")]),v._v(" 和 "),e("code",[v._v("Q")]),v._v(" 中間沒有任何活魚的時候，他們就會相遇，相遇之後:")]),v._v(" "),e("ul",[e("li",[v._v("如果 "),e("code",[v._v("A[P] > A[Q]")]),v._v(" 的時候 P 就會把 Q 吃掉，然後 P 繼續往下游前進")]),v._v(" "),e("li",[v._v("如果 "),e("code",[v._v("A[P] < A[Q]")]),v._v(" 的時候 P 就會被 Q 吃掉，然後 Q 繼續往上游前進")])]),v._v(" "),e("p",[v._v("在這個題目中，你可以假設魚在河裡的游泳速度全部都一樣（不管什麼方向）。換句話說，朝同一個方向游的魚絕對不會相遇。你的目標就是計算最後剩下幾隻魚。")]),v._v(" "),e("h2",{attrs:{id:"ce-zi-shuo-ming"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ce-zi-shuo-ming"}},[v._v("#")]),v._v(" 測資說明")]),v._v(" "),e("ul",[e("li",[e("code",[v._v("1 <= N <= 100000")]),v._v(", "),e("code",[v._v("N")]),v._v(" 是整數")]),v._v(" "),e("li",[v._v("陣列 "),e("code",[v._v("A")]),v._v(" 中的每個元素 "),e("code",[v._v("1 <= A[i] <= 1000000000")]),v._v(", "),e("code",[v._v("A[i]")]),v._v(" 是不重複的整數，")]),v._v(" "),e("li",[v._v("陣列 "),e("code",[v._v("B")]),v._v(" 中的每個元素 "),e("code",[v._v("0 <= B[i] <= 1")]),v._v(", "),e("code",[v._v("B[i]")]),v._v(" 是整數")])]),v._v(" "),e("h2",{attrs:{id:"fan-li"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fan-li"}},[v._v("#")]),v._v(" 範例")]),v._v(" "),e("p",[v._v("假設給定以下資料:")]),v._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("A = [4, 3, 2, 1, 5]\nB = [0, 1, 0, 0, 0]\n")])])]),e("p",[v._v("一開始所有的魚都是活著的，除了 "),e("code",[v._v("1")]),v._v(" 號魚以外其他都是往上游的方向游泳。接下來:")]),v._v(" "),e("ol",[e("li",[v._v("1 號魚和 2 號魚會相遇，然後 2 號魚被吃掉")]),v._v(" "),e("li",[v._v("1 號魚和 3 號魚會相遇，然後 3 號魚被吃掉")]),v._v(" "),e("li",[v._v("1 號魚和 4 號魚會相遇，然後 1 號魚被吃掉")]),v._v(" "),e("li",[v._v("最後會剩下 0 號魚和 4 號魚，他們永遠不會相遇")])]),v._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[v._v("這是我的解題結果 (含答案)")]),v._v(" "),e("p",[e("a",{attrs:{href:"https://app.codility.com/demo/results/trainingZA5QGS-8G8/",target:"_blank",rel:"noopener noreferrer"}},[v._v("https://app.codility.com/demo/results/trainingZA5QGS-8G8/"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=o.exports}}]);